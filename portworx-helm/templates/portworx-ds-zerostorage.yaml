#Only if Zerostorage is true. 
{{- if .Values.px.InstallOptions.zeroStorage && eq .Values.px.InstallOptions.zeroStorage true}}
#Setting defaults if they are omitted.
{{ .Values.px.installOptions.runOnMaster | default false}}
{{ .Values.px.installOptions.zeroStorage | default false}}
{{ .Values.px.installOptions.usefileSystemDrive | default false}}

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: portworx-zerostorage
  namespace: kube-system
spec:
  minReadySeconds: 0
  
  {{- if eq (.Values.px.deploymentType | upper | lower) "oci" }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  
  {{- else if eq (.Values.px.deploymentType | upper | lower) "docker" }}
  updateStrategy:
    type: OnDelete
  
  {{- end }}
  template:
    metadata:
      labels:
        app:  portworx-zerostorage
        name: portworx
      namespace: kube-system
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Equal
        effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
              - key: px/enabled
                operator: NotIn
                values:
                - "false"
      hostNetwork: true
      hostPID: true
      containers:
        - name: portworx

          {{- if eq (.Values.px.deploymentType | upper | lower) "oci" }}
          image: portworx/oci-monitor:{{ required  "A valid Image tag. Should be in the SemVer format" .Values.px.imageTag }}

          {{- else if eq (.Values.px.deploymentType | upper | lower) "docker" }}
          image: portworx/px-enterprise:{{ required "A valid Image tag. Should be in the SemVer format" .Values.px.imageTag }}

          {{- end }}          
          terminationMessagePath: "/tmp/px-termination-log"
          imagePullPolicy: Always
          args:
  
          {{- with .Values.px.installOptions }}
            [
              "-k", 
              "{{ required .etcd }}", 
              "-c", 
              "{{ required .clusterName }}", 

              {{- if .dataInterface }}
              "-d",
              "{{ .dataInterface }}",
              {{- end }}

              {{- if .managementInterface }}
              "-m",
              "{{ .managementInterface }}",
              {{- end }}

              "-z",
              "-x",
              "kubernetes"
             ]
  
          {{- end }}   
          env:
            - name: "PX_TEMPLATE_VERSION"
              value: "v2"
          livenessProbe:
            periodSeconds: 30
            initialDelaySeconds: 840 # allow image pull in slow networks
            httpGet:
              host: 127.0.0.1
              path: /status
              port: 9001
          readinessProbe:
            periodSeconds: 10
            httpGet:
              host: 127.0.0.1
  
              {{- if eq (.Values.px.deploymentType | upper | lower) "oci" }}
              path: /health
              port: 9015
  
              {{- else if eq (.Values.px.deploymentType | upper | lower) "docker" }}
              path: /v1/cluster/nodehealth
              port: 9001
  
              {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: dockersock
              mountPath: /var/run/docker.sock
            - name: kubelet
              mountPath: /var/lib/kubelet:shared
            - name: libosd
              mountPath: /var/lib/osd:shared
            - name: etcpwx
              mountPath: /etc/pwx

          {{- if eq (.Values.px.deploymentType | upper | lower) "oci" }}
            - name: optpwx
              mountPath: /opt/pwx
            - name: proc1nsmount
              mountPath: /host_proc/1/ns
            - name: sysdmount
              mountPath: /etc/systemd/system

          {{- else if eq (.Values.px.deploymentType | upper | lower) "docker" }}
            - name: optpwx
              mountPath: /export_bin
            - name: dev
              mountPath: /dev
            - name: cores
              mountPath: /var/cores
            - name: src
              mountPath: /usr/src
            - name: dockerplugins
              mountPath: /run/docker/plugins
            - name: hostproc
              mountPath: /hostproc
          {{- end }}
      restartPolicy: Always
      serviceAccountName: px-account
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: kubelet
          hostPath:
            path: /var/lib/kubelet
        - name: libosd
          hostPath:
            path: /var/lib/osd
        - name: etcpwx
          hostPath:
            path: /etc/pwx
        
        {{- if eq (.Values.px.deploymentType | upper | lower) "oci" }}
        - name: optpwx
          hostPath:
            path: /opt/pwx
        - name: proc1nsmount
          hostPath:
            path: /proc/1/ns
        - name: sysdmount
          hostPath:
            path: /etc/systemd/system

        {{- else if eq (.Values.px.deploymentType | upper | lower) "docker" }}
        - name: optpwx
          hostPath:
            path: /opt/pwx/bin
        - name: dev
          hostPath:
            path: /dev
        - name: cores
          hostPath:
            path: /var/cores
        - name: src
          hostPath:
            path: /usr/src
        - name: dockerplugins
          hostPath:
            path: /run/docker/plugins
        - name: hostproc
          hostPath:
            path: /proc
        {{- end }}
{{- end }}